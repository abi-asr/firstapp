{"ast":null,"code":"var _jsxFileName = \"C:\\\\Abi\\\\React app\\\\instagramapp\\\\src\\\\Pages\\\\Home\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { newsFeedList } from \"../../Common/jsonUtil\";\nimport \"./Home.css\";\nimport { savedList } from \"../../action/commonAction\";\nimport AppHeader from \"../../Components/AppHeader/AppHeader\";\nimport { LIKED, SAVEPAGE, SAVEPATH } from \"../../Common/CommonConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet savedListArray = [];\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLike = (index, item) => {\n      item.likedStatus = !item.likedStatus;\n      this.setState({\n        liked: !item.likedStatus\n      });\n    };\n\n    this.handleSave = item => {\n      item.savedStatus = !item.savedStatus;\n      this.setState({\n        liked: !item.savedStatus\n      });\n\n      if (item.savedStatus) {\n        if (savedListArray.length === 0) savedListArray.push(item);\n\n        for (let i = 0; i < savedListArray.length; i++) {\n          if (item.id !== savedListArray[i].id) {\n            savedListArray.push(item);\n            break;\n          }\n        }\n      } else {\n        savedListArray.map((listItem, index) => {\n          if (listItem.id === item.id) savedListArray.splice(index, 1);\n          return null;\n        });\n      }\n    };\n\n    this.likeRender = (event, index, item) => {\n      return /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: this.handleLike.bind(this, index, item),\n        \"aria-label\": \"add to favorites\",\n        children: item.likedStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: LIKED\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.saveRender = item => {\n      return /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"save\",\n        onClick: this.handleSave.bind(this, item),\n        children: item.savedStatus ? /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(BookmarkBorderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      anchor: false,\n      anchorEl: null,\n      dialogOpen: false,\n      modalOpen: false,\n      liked: false\n    };\n  } //used to handling like feature functionality\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        page: SAVEPAGE,\n        path: SAVEPATH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newsFeedBody\",\n        children: newsFeedList.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"root\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                \"aria-label\": \"recipe\",\n                children: [\" \", item.avatar]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this),\n              title: item.title,\n              subheader: \"September 14, 2016\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n              className: \"media\",\n              image: item.image,\n              title: \"Paella dish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                color: \"textSecondary\",\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              disableSpacing: true,\n              children: [this.likeRender(this, index, item), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"share\",\n                style: {\n                  cursor: 'not-allowed'\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), this.saveRender(item)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  } //used to send the data to saveditems page when current page ends \n\n\n  componentWillUnmount() {\n    this.props.savedList(savedListArray);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //getting username while login from store\n    username: state.common.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //dispatching saved to set the data to store\n    savedList: data => dispatch(savedList(data))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["C:/Abi/React app/instagramapp/src/Pages/Home/Home.js"],"names":["React","Component","withRouter","connect","IconButton","Typography","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","FavoriteIcon","ShareIcon","BookmarkBorderIcon","BookmarkIcon","FavoriteBorderIcon","newsFeedList","savedList","AppHeader","LIKED","SAVEPAGE","SAVEPATH","savedListArray","Home","constructor","props","handleLike","index","item","likedStatus","setState","liked","handleSave","savedStatus","length","push","i","id","map","listItem","splice","likeRender","event","bind","color","saveRender","state","anchor","anchorEl","dialogOpen","modalOpen","render","avatar","title","image","description","cursor","componentWillUnmount","mapStateToProps","username","common","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardHeader from \"@material-ui/core/CardHeader\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport ShareIcon from \"@material-ui/icons/Share\"\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\"\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\"\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\r\nimport { newsFeedList } from \"../../Common/jsonUtil\"\r\nimport \"./Home.css\"\r\nimport { savedList } from \"../../action/commonAction\"\r\nimport AppHeader from \"../../Components/AppHeader/AppHeader\"\r\nimport { LIKED, SAVEPAGE, SAVEPATH } from \"../../Common/CommonConstants\"\r\n \r\nlet savedListArray = []\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      anchor: false,\r\n      anchorEl: null,\r\n      dialogOpen: false,\r\n      modalOpen: false,\r\n      liked: false,\r\n    }\r\n  }\r\n  //used to handling like feature functionality\r\n  handleLike = (index, item) => {\r\n    item.likedStatus = !item.likedStatus\r\n    this.setState({ liked: !item.likedStatus })\r\n  }\r\n  //used to handling saved items feature functinality\r\n  handleSave = (item) => {\r\n    item.savedStatus = !item.savedStatus\r\n    this.setState({ liked: !item.savedStatus })\r\n    if (item.savedStatus) {\r\n      if (savedListArray.length === 0)\r\n        savedListArray.push(item)\r\n      for (let i = 0; i < savedListArray.length; i++) {\r\n        if (item.id !== savedListArray[i].id) {\r\n          savedListArray.push(item)\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      savedListArray.map((listItem, index) => {\r\n        if (listItem.id === item.id)\r\n          savedListArray.splice(index, 1)\r\n          return null\r\n      }) \r\n    }\r\n  }\r\n  //used to render like feature in the card\r\n  likeRender = (event, index, item) => {\r\n    return (\r\n      <IconButton\r\n        onClick={this.handleLike.bind(this, index, item)}\r\n        aria-label=\"add to favorites\" >\r\n        {item.likedStatus ? (\r\n          <>\r\n            <Typography>{LIKED}</Typography>\r\n            <FavoriteIcon style={{ color: \"red\" }} />\r\n          </>\r\n        ) : <FavoriteBorderIcon />}\r\n      </IconButton>\r\n    )\r\n  } \r\n  //used to render save feature in the card\r\n  saveRender = (item) => {\r\n    return (\r\n      <IconButton aria-label=\"save\" onClick={this.handleSave.bind(this, item)}>\r\n        {item.savedStatus ? (\r\n          <BookmarkIcon />\r\n        ) : <BookmarkBorderIcon />}\r\n      </IconButton>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppHeader page={SAVEPAGE} path={SAVEPATH} />\r\n        <div className=\"newsFeedBody\">\r\n          {newsFeedList.map((item, index) => {\r\n            return (\r\n              <Card className=\"root\" key={item.id}>\r\n                <CardHeader avatar={\r\n                  <Avatar aria-label=\"recipe\" > {item.avatar}</Avatar>}\r\n                  title={item.title}\r\n                  subheader=\"September 14, 2016\" />\r\n                <CardMedia\r\n                  className=\"media\"\r\n                  image={item.image}\r\n                  title=\"Paella dish\" />\r\n                <CardContent>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    {item.description}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                  {this.likeRender(this, index, item)}\r\n                  <IconButton aria-label=\"share\" style={{ cursor: 'not-allowed' }} > <ShareIcon /></IconButton>\r\n                  {this.saveRender(item)}\r\n                </CardActions>\r\n              </Card>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  //used to send the data to saveditems page when current page ends \r\n  componentWillUnmount() {\r\n    this.props.savedList(savedListArray)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //getting username while login from store\r\n    username: state.common.username,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //dispatching saved to set the data to store\r\n    savedList: (data) => dispatch(savedList(data)),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))\r\n"]},"metadata":{},"sourceType":"module"}