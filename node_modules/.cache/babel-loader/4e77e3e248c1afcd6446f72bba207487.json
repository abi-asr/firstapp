{"ast":null,"code":"import { register } from 'register-service-worker';\n\nif ('serviceWorker' in navigator) {\n  Notification.requestPermission(function (status) {\n    console.log('Notification permission status:', status);\n\n    if (Notification.permission === 'granted') {\n      if ('Notification' in window) {\n        Notification.requestPermission(result => {\n          if (result === 'granted') {\n            console.log('handeler');\n          }\n        });\n      }\n    }\n  });\n}\n\nwindow.addEventListener('online', function () {\n  if (!navigator.serviceWorker && !window.SyncManager) {\n    // fetchData().then(function(response) {\n    //     if(response.length > 0) {\n    //         return sendData();\n    //     }\n    // });\n    console.log('sync working');\n  } else {\n    console.log('sync not working');\n  }\n});\n\nfunction showNotification(title, message) {\n  if ('Notification' in window) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.showNotification(title, {\n        body: message,\n        icon: 'http://mtechweb.in/TA/upload/logo/school/school_logo.jpg',\n        vibrate: [100, 50, 100]\n      });\n    });\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  register(`./service-worker.js`, {\n    ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n\n    offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n\n  });\n}","map":{"version":3,"sources":["C:/Abi/React app/instagramapp/src/serviceWorker.js"],"names":["register","navigator","Notification","requestPermission","status","console","log","permission","window","result","addEventListener","serviceWorker","SyncManager","showNotification","title","message","ready","then","registration","body","icon","vibrate","process","env","NODE_ENV","registered","cached","updatefound","updated","offline","error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,yBAAzB;;AAEA,IAAI,mBAAmBC,SAAvB,EAAkC;AAChCC,EAAAA,YAAY,CAACC,iBAAb,CAA+B,UAAUC,MAAV,EAAkB;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,MAA/C;;AACA,QAAIF,YAAY,CAACK,UAAb,KAA4B,SAAhC,EAA2C;AACzC,UAAI,kBAAkBC,MAAtB,EAA8B;AAC5BN,QAAAA,YAAY,CAACC,iBAAb,CAA+BM,MAAM,IAAI;AACvC,cAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAED;AACF,SALD;AAMD;AACF;AACF,GAZD;AAaD;;AACDE,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC5C,MAAI,CAACT,SAAS,CAACU,aAAX,IAA4B,CAACH,MAAM,CAACI,WAAxC,EAAqD;AACnD;AACA;AACA;AACA;AACA;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAPD,MAOO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,CAXD;;AAYA,SAASO,gBAAT,CAA2BC,KAA3B,EAAkCC,OAAlC,EAA2C;AACzC,MAAI,kBAAkBP,MAAtB,EAA8B;AAC5BP,IAAAA,SAAS,CAACU,aAAV,CAAwBK,KAAxB,CAA8BC,IAA9B,CAAmCC,YAAY,IAAI;AACjDA,MAAAA,YAAY,CAACL,gBAAb,CAA8BC,KAA9B,EAAqC;AACnCK,QAAAA,IAAI,EAAEJ,OAD6B;AAEnCK,QAAAA,IAAI,EAAE,0DAF6B;AAGnCC,QAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV;AAH0B,OAArC;AAKD,KAND;AAOD;AACF;;AACD,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCxB,EAAAA,QAAQ,CAAE,qBAAF,EAAwB;AAC9BgB,IAAAA,KAAK,GAAI;AACPX,MAAAA,OAAO,CAACC,GAAR,CACE,0DACA,+CAFF;AAID,KAN6B;;AAO9BmB,IAAAA,UAAU,GAAI;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,KAT6B;;AAU9BoB,IAAAA,MAAM,GAAI;AACRrB,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAZ6B;;AAa9BqB,IAAAA,WAAW,GAAI;AACbtB,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAf6B;;AAgB9BsB,IAAAA,OAAO,GAAI;AACTvB,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD,KAlB6B;;AAmB9BuB,IAAAA,OAAO,GAAI;AACTxB,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACD,KArB6B;;AAsB9BwB,IAAAA,KAAK,CAAEA,KAAF,EAAS;AACZzB,MAAAA,OAAO,CAACyB,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACD;;AAxB6B,GAAxB,CAAR;AA0BD","sourcesContent":["import { register } from 'register-service-worker'\r\n\r\nif ('serviceWorker' in navigator) {\r\n  Notification.requestPermission(function (status) {\r\n    console.log('Notification permission status:', status)\r\n    if (Notification.permission === 'granted') {\r\n      if ('Notification' in window) {\r\n        Notification.requestPermission(result => {\r\n          if (result === 'granted') {\r\n            console.log('handeler')\r\n          \r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n}\r\nwindow.addEventListener('online', function () {\r\n  if (!navigator.serviceWorker && !window.SyncManager) {\r\n    // fetchData().then(function(response) {\r\n    //     if(response.length > 0) {\r\n    //         return sendData();\r\n    //     }\r\n    // });\r\n    console.log('sync working')\r\n  } else {\r\n    console.log('sync not working')\r\n  }\r\n})\r\nfunction showNotification (title, message) {\r\n  if ('Notification' in window) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.showNotification(title, {\r\n        body: message,\r\n        icon: 'http://mtechweb.in/TA/upload/logo/school/school_logo.jpg',\r\n        vibrate: [100, 50, 100]\r\n      })\r\n    })\r\n  }\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`./service-worker.js`, {\r\n    ready () {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered () {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached () {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound () {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated () {\r\n      console.log('New content is available; please refresh.')\r\n    },\r\n    offline () {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error (error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}